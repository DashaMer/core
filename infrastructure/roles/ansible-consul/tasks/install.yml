---
- name: update apt
  sudo: true
  apt: update_cache=yes

- name: install BIND9
  apt: name="{{item}}" state=present update_cache=yes
  with_items:
     - bind9
     - bind9utils
     - bind9-doc
  when: install_bind == true
  
- name: copy named.conf.options
  template: >
    src=named.conf.options.j2
    dest=/etc/bind/named.conf.options
  when: install_bind == true
   
- name: copy consul.conf
  template: >
    src=consul.conf_bind.j2
    dest=/etc/bind/consul.conf
  when: install_bind == true
   
- name: restart bind9
  shell: sudo service bind9 restart
  when: install_bind == true

- name: Remove resolvconf on Debian system
  apt: pkg=resolvconf state=absent
  
- name: resolv.conf config file
  template: src=resolv.conf.j2
            dest=/etc/resolv.conf

- name: Ensure dns servers are configured in dhclient.conf
  lineinfile: >
     regexp="#?(supersede|prepend) {{item.name}} "
     line="{{dns_dhclient_rule}} {{item.name}} {{item.value}};"  
     dest="{{dns_dhclient_file}}"
     state=present
  with_items:
    - { name: 'domain-name-servers', value: '{% for nameserver in dns_nameservers %}{{ nameserver }}{% if not loop.last %},{% endif %}{% endfor %}' }
    - { name: 'domain-name', value: '"{{dns_domain}}"' }
    - { name: 'domain-search', value: '{% for domainsearch in dns_searchs %}\"{{domainsearch}}\"{% endfor %}' }
  when:  dns_forced_in_dhclientconf and item.value != ""
  tags: [configuration,dns]
  
- name: reconfig
  shell: sudo ifdown --exclude=lo -a && sudo ifup --exclude=lo -a
  
- name: nsswitch.conf.j2
  template: src=nsswitch.conf.j2
            dest=/etc/nsswitch.conf
  
- name: add multiverse
  sudo: true
  command: add-apt-repository "deb http://archive.ubuntu.com/ubuntu trusty universe"

- name: install deps unzip and jq
  apt: >
    pkg={{item}}
    state=installed
  with_items:
    - unzip
    - jq

- name: download consul
  get_url: >
    url={{consul_download}}
    dest={{consul_download_folder}}
  register: consul_was_downloaded

- name: create consul group
  group: >
    name={{consul_group}}
    state=present

- name: create consul user
  user: >
    name={{consul_user}}
    group={{consul_group}}

- name: create consul directory
  file: >
    state=directory
    path={{ item }}
    owner={{consul_user}}
    group={{consul_group}}
  with_items:
    - "{{ consul_home }}"
    - "{{ consul_home }}/bin"
    - "{{ consul_data_dir }}"
    - "{{ consul_config_dir }}"

- name: copy and unpack
  unarchive: >
    src={{ consul_download_folder }}/{{ consul_archive }}
    dest={{ consul_home }}/bin
    copy=no
  when: consul_was_downloaded|changed

- name: set ownership
  file: >
    state=directory
    path={{consul_home}}
    owner={{consul_user}}
    group={{consul_group}}
    recurse=yes
  when: consul_was_downloaded|changed

- name: copy consul upstart script
  template: >
    src=consul.conf.j2
    dest=/etc/init/consul.conf
    owner={{consul_user}}
    group={{consul_group}}
    mode=0755

- name: add consul to path through profile.d
  template: >
    src=consul.sh.j2
    dest=/etc/profile.d/consul.sh
    owner=root
    group=root
    mode=0755

- name: copy consulkv script
  template: >
    src=consulkv.j2
    dest={{consul_home}}/bin/consulkv
    owner={{consul_user}}
    group={{consul_group}}
    mode=0755

- name: consul config file
  template: >
    src=consul.json.j2
    dest={{ consul_config_file }}
    owner={{consul_user}}
    group={{consul_group}}
    mode=0755

