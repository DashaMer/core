<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="configuration.xsl"?>
<!--
  Licensed under the Apache License, Version 2.0 (the "License");
  you may not use this file except in compliance with the License.
  You may obtain a copy of the License at

    http://www.apache.org/licenses/LICENSE-2.0

  Unless required by applicable law or agreed to in writing, software
  distributed under the License is distributed on an "AS IS" BASIS,
  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
  See the License for the specific language governing permissions and
  limitations under the License. See accompanying LICENSE file.
-->

<!-- Put site-specific property overrides in this file. -->

<configuration>
	<property>
		<name>dfs.namenode.name.dir</name>
		<value>file:///hadoop/name</value>
		<description>Determines where on the local filesystem the DFS name node
		  should store the name table(fsimage).  If this is a comma-delimited list
		  of directories then the name table is replicated in all of the
		  directories, for redundancy. </description>
	</property>	
	<property>
		<name>dfs.blocksize</name>
		<value>268435456</value>
		<description>
			The default block size for new files, in bytes.
			You can use the following suffix (case insensitive):
			k(kilo), m(mega), g(giga), t(tera), p(peta), e(exa) to specify the size (such as 128k, 512m, 1g, etc.),
			Or provide complete size in bytes (such as 134217728 for 128 MB).
		</description>
	</property>
	<property>
		<name>dfs.namenode.handler.count</name>
		<value>100</value>
		<description>The number of server threads for the namenode.</description>
	</property>
	<property>
  		<name>dfs.namenode.rpc-address</name>
			<value>${NN_RPC_ADDR}</value>
			<description>
			RPC address that handles all clients requests. In the case of HA/Federation where multiple namenodes exist,
			the name service id is added to the name e.g. dfs.namenode.rpc-address.ns1
			dfs.namenode.rpc-address.EXAMPLENAMESERVICE
			The value of this property will take the form of nn-host1:rpc-port.
			</description>
	</property>
	<property>
		<name>dfs.namenode.rpc-bind-host</name>
		<value>0.0.0.0</value>
		<description>
		The actual address the RPC server will bind to. If this optional address is
		set, it overrides only the hostname portion of dfs.namenode.rpc-address.
		It can also be specified per name node or name service for HA/Federation.
		This is useful for making the name node listen on all interfaces by
		setting it to 0.0.0.0.
		</description>
	</property>
	<property>
		<name>dfs.namenode.servicerpc-address</name>
		<value>${NN_IPC_ADDR}</value>
		<description>
		RPC address for HDFS Services communication. BackupNode, Datanodes and all other services should be
		connecting to this address if it is configured. In the case of HA/Federation where multiple namenodes exist,
		the name service id is added to the name e.g. dfs.namenode.servicerpc-address.ns1
		dfs.namenode.rpc-address.EXAMPLENAMESERVICE
		The value of this property will take the form of nn-host1:rpc-port.
		If the value of this property is unset the value of dfs.namenode.rpc-address will be used as the default.
		</description>
	</property>
	<property>
		<name>dfs.namenode.servicerpc-bind-host</name>
		<value>0.0.0.0</value>
		<description>
		The actual address the service RPC server will bind to. If this optional address is
		set, it overrides only the hostname portion of dfs.namenode.servicerpc-address.
		It can also be specified per name node or name service for HA/Federation.
		This is useful for making the name node listen on all interfaces by
		setting it to 0.0.0.0.
		</description>
	</property>
	<property>
		<name>dfs.namenode.http-address</name>
		<value>${NN_HTTP_ADDR}</value>
		<description>
		The address and the base port where the dfs namenode web ui will listen on.
		</description>
	</property>
	<property>
		<name>dfs.namenode.http-bind-host</name>
		<value>0.0.0.0</value>
		<description>
		The actual adress the HTTP server will bind to. If this optional address
		is set, it overrides only the hostname portion of dfs.namenode.http-address.
		It can also be specified per name node or name service for HA/Federation.
		This is useful for making the name node HTTP server listen on all
		interfaces by setting it to 0.0.0.0.
		</description>
	</property>
	<property>
		<name>dfs.namenode.datanode.registration.ip-hostname-check</name>
		<value>false</value>
		<description>
		If true (the default), then the namenode requires that a connecting
		datanode's address must be resolved to a hostname.  If necessary, a reverse
		DNS lookup is performed.  All attempts to register a datanode from an
		unresolvable address are rejected.

		It is recommended that this setting be left on to prevent accidental
		registration of datanodes listed by hostname in the excludes file during a
		DNS outage.  Only set this to false in environments where there is no
		infrastructure to support reverse DNS lookup.
		</description>
	</property>
</configuration>
